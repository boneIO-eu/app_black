mqtt:
  type: dict
  required: True
  meta:
    label: Mqtt section
  schema:
    host:
      required: True
      type: string
      meta:
        label: Mqtt broker hostname or IP address
    username:
      required: False
      type: string
      meta:
        label: Username to connect ot mqtt broker
    password:
      required: False
      type: string
      meta:
        label: Password to mqtt
    port:
      required: True
      type: integer
      default: 1883
      meta:
        label: Port to connect to mqtt broker
    topic_prefix:
      type: string
      default: boneIO
      required: True
      meta:
        label: Prefix topic for boneIO to use
    ha_discovery:
      type: dict
      meta:
        label: Ha discovery sub section
      default: {}
      schema:
        enabled:
          type: boolean
          default: True
          meta:
            label: Enable HA discovery.
        topic_prefix:
          type: string
          default: homeassistant
          meta:
            label: Prefix topic of HA discovery.

logger:
  type: dict
  required: False
  schema:
    default:
      type: string
      required: False
      allowed: ['critical', 'error', 'warning', 'info', 'debug']
      meta:
        label: Module which you want logger to set. Default for app logger.
    logs:
      type: dict
      meta:
        label: List of dict module\:level.

oled:
  type: dict
  default: {}
  required: True
  schema:
    enabled:
      type: boolean
      default: False
      meta:
        label: Disable builtin screen.
    screens:
      type: list
      required: True
      allowed:
        [
          'uptime',
          'network',
          'ina219',
          'cpu',
          'disk',
          'memory',
          'swap',
          'outputs',
        ]
      default:
        - uptime
        - network
        - ina219
        - cpu
        - disk
        - memory
        - swap
        - outputs
    screensaver_timeout:
      type:
        - string
        - timeperiod
      coerce:
        - str
        - positive_time_period
      default: 60s
      meta:
        label: How many seconds to wait to enable screensaver. 0 means disable screensaver.

modbus:
  type: dict
  required: False
  schema:
    uart:
      type: string
      required: True
      allowed: ['uart1', 'uart2', 'uart3', 'uart4', 'uart5']
      meta:
        label: Uart ID to use

modbus_sensors:
  type: list
  required: False
  meta:
    label: Modbus sensors
  schema:
    type: dict
    schema:
      id:
        type: string
        required: True
        meta:
          label: Id of Modbus sensor
      address:
        type:
          - string
          - integer
        required: True
        meta:
          label: Address of Modbus sensor to use.
      model:
        type: string
        required: True
        allowed: ['sdm630', 'sdm120', 'sofar']
        meta:
          label: Model to load from database.
      update_interval:
        type:
          - string
          - timeperiod
        coerce:
          - str
          - positive_time_period
        required: True
        default: 30s
        meta:
          label: Update interval.
lm75:
  type: list
  required: False
  meta:
    label: LM75 Sensor list.
  schema:
    type: dict
    required: False
    schema:
      id: !include id.yaml
      address:
        type:
          - string
          - integer
        required: True
        default: 0x48
        meta:
          label: Address of I2C
      update_interval: !include update_interval.yaml
      filters: !include filters.yaml
      unit_of_measurement: !include temp_unit.yaml

ina219:
  type: list
  required: False
  meta:
    label: INA219 Sensor list.
  schema:
    type: dict
    required: False
    schema:
      id: !include id.yaml
      address:
        type:
          - string
          - integer
        required: True
        default: 0x40
        meta:
          label: Address of I2C
      sensors:
        type: list
        required: True
        schema:
          type: dict
          required: False
          schema:
            id: !include id.yaml
            device_class:
              type: string
              allowed: ['current', 'power', 'voltage']
            filters: !include filters.yaml
        default:
          - id: INA219 Current
            device_class: current
          - id: INA219 Power
            device_class: power
          - id: INA219 Voltage
            device_class: voltage
      update_interval: !include update_interval.yaml

mcp9808:
  type: list
  required: False
  meta:
    label: MCP9808 Sensor list.
  schema:
    type: dict
    required: False
    schema:
      id: !include id.yaml
      address:
        type:
          - string
          - integer
        required: True
        default: 0x18
        meta:
          label: Address of I2C device
      update_interval: !include update_interval.yaml
      filters: !include filters.yaml
      unit_of_measurement: !include temp_unit.yaml

mcp23017:
  type: list
  required: False
  meta:
    label: mcp23017 Pin config
  schema:
    type: dict
    schema:
      id: !include id.yaml
      address:
        type: integer
        required: True
        meta:
          label: GPIO of I2C SDA
      init_sleep:
        type:
          - string
          - timeperiod
        coerce:
          - str
          - positive_time_period
        required: True
        default: 0s
        meta:
          label: How long to sleep for MCP to initialize.

pcf8575:
  type: list
  required: False
  meta:
    label: pcf8575 Pin config
  schema:
    type: dict
    schema:
      id: !include id.yaml
      address:
        type: integer
        required: True
        meta:
          label: GPIO of I2C SDA
      init_sleep:
        type:
          - string
          - timeperiod
        coerce:
          - str
          - positive_time_period
        required: True
        default: 0s
        meta:
          label: How long to sleep for PCF to initialize.

pca9685:
  type: list
  required: False
  meta:
    label: pca9685 Pin config
  schema:
    type: dict
    schema:
      id: !include id.yaml
      address:
        type: integer
        required: True
        meta:
          label: GPIO of I2C SDA
      init_sleep:
        type:
          - string
          - timeperiod
        coerce:
          - str
          - positive_time_period
        required: True
        default: 0s
        meta:
          label: How long to sleep for PCA to initialize.

output:
  type: list
  meta:
    label: List of output relays
  check_with: output_id_uniqueness
  schema:
    type: dict
    schema:
      id:
        type: string
        required: False
        coerce: str
        meta:
          label: Id to send to use in HA and in GPIO Input. Default to `kind_pin`
      kind:
        type: string
        allowed: ['gpio', 'mcp', 'pca', 'pcf']
        meta:
          label: Either GPIO or i2c.
      mcp_id:
        type: string
        required: False
        meta:
          label: MCP ID to connect
      pca_id:
        type: string
        required: False
        meta:
          label: PCA ID to connect
      pcf_id:
        type: string
        required: False
        meta:
          label: PCF ID to connect
      pin:
        type:
          - string
          - integer
        required: True
        meta:
          label: PIN to use.
      momentary_turn_on:
        type:
          - string
          - timeperiod
        coerce:
          - str
          - positive_time_period
        required: False
        meta:
          label: How long can this relay be off. Can"t be used if output_type is "none".
      momentary_turn_off:
        type:
          - string
          - timeperiod
        coerce:
          - str
          - positive_time_period
        required: False
        meta:
          label: How long can this relay be on. Can"t be used if output_type is "none".
      restore_state:
        type: boolean
        required: True
        default: True
        meta:
          label: Restore saved state of boneio. Not used for "none" and output_type!
      percentage_default_brightness:
        type: integer
        required: False
        default: 1
        meta:
          label: When the brightness is not set in ha, and we switch led to turn this value will be used
      output_type:
        type: string
        required: True
        allowed: ['switch', 'light', 'cover', 'none']
        default: 'switch'
        coerce: lower
        meta:
          label: If HA discovery is used device if relay is light or switch. Cover if this output will be used for cover. If None is declared then any state is not published to MQTT (used for cover).

output_group:
  type: list
  meta:
    label: List of groupes outputs
  check_with: output_id_uniqueness
  schema:
    type: dict
    schema:
      id:
        type: string
        required: False
        coerce: str
        meta:
          label: Id to send to use in HA and in GPIO Input. Default to `kind_pin`
      outputs:
        type: list
        required: True
        meta:
          label: List of outputs.
      output_type:
        type: string
        required: True
        allowed: ['switch', 'light']
        default: 'switch'
        coerce: lower
        meta:
          label: If HA discovery is used device if relay is light or switch.

binary_sensor:
  type: list
  meta:
    label: GPIO inputs section
  schema:
    type: dict
    schema:
      id:
        type: string
        required: False
        meta:
          label: Id to use in HA if needed. Default to pin number.
      pin:
        type: string
        required: True
        meta:
          label: PIN to use.
      gpio_mode:
        type: string
        required: True
        default: 'gpio'
        allowed: ['gpio', 'gpio_pu', 'gpio_pd', 'gpio_input']
        meta:
          label: What mode to use in config PIN.
      detection_type:
        type: string
        required: True
        default: 'new'
        allowed: ['new', 'old']
        meta:
          label: There are 2 detector algorithms. Old consumes more CPU but it is tested by many users. New is more optimized, but needed extra time for testing.
      clear_message:
        type: boolean
        default: False
        meta:
          label: Decide if after press/release callback send empty message to mqtt. Same as Zigbee2Mqtt is doing in button actions.
      bounce_time:
        type:
          - string
          - timeperiod
        coerce:
          - str
          - positive_time_period
        required: True
        default: '120ms'
        meta:
          label: Bounce time for GPIO in miliseconds. Only for advanced usage.
      show_in_ha:
        type: boolean
        required: True
        default: True
        meta:
          label: If you want you can disable discovering this input in HA.
      inverted:
        type: boolean
        default: False
        required: True
        meta:
          label: Check if sensor type is inverted. Only aplicable for sensor kind.
      device_class:
        type: string
        required: False
        allowed:
          [
            'battery',
            'battery_charging',
            'carbon_monoxide',
            'cold',
            'connectivity',
            'door',
            'garage_door',
            'gas',
            'heat',
            'light',
            'lock',
            'moisture',
            'motion',
            'moving',
            'occupancy',
            'opening',
            'plug',
            'power',
            'presence',
            'problem',
            'running',
            'safety',
            'smoke',
            'sound',
            'tamper',
            'vibration',
            'window',
          ]
        meta:
          label: Device class to use in HA
      actions:
        required: False
        type: dict
        coerce: check_actions
        schema:
          pressed: !include actions_sensor.yaml
          released: !include actions_sensor.yaml

event:
  type: list
  meta:
    label: GPIO inputs section
  schema:
    type: dict
    schema:
      id:
        type: string
        required: False
        meta:
          label: Id to use in HA if needed. Default to pin number.
      pin:
        type: string
        required: True
        meta:
          label: PIN to use.
      gpio_mode:
        type: string
        required: True
        default: 'gpio'
        allowed: ['gpio', 'gpio_pu', 'gpio_pd', 'gpio_input']
        meta:
          label: What mode to use in config PIN.
      detection_type:
        type: string
        required: True
        default: 'new'
        allowed: ['new', 'old']
        meta:
          label: There are 2 detector algorithms. Old consumes more CPU but it is tested by many users. New is more optimized, but needed extra time for testing.
      clear_message:
        type: boolean
        default: False
        meta:
          label: Decide if after press/release callback send empty message to mqtt. Same as Zigbee2Mqtt is doing in button actions.
      bounce_time:
        type:
          - string
          - timeperiod
        coerce:
          - str
          - positive_time_period
        required: True
        default: '30ms'
        meta:
          label: Bounce time for GPIO in miliseconds. Only for advanced usage.
      show_in_ha:
        type: boolean
        required: True
        default: True
        meta:
          label: If you want you can disable discovering this input in HA.
      inverted:
        type: boolean
        default: False
        required: True
        meta:
          label: Check if sensor type is inverted. Only aplicable for sensor kind.
      device_class:
        type: string
        required: False
        default: 'button'
        allowed: ['button', 'doorbell', 'motion']
        meta:
          label: Device class to use in HA
      actions:
        required: False
        type: dict
        coerce: check_actions
        schema:
          single: !include actions_switch.yaml
          double: !include actions_switch.yaml
          long: !include actions_switch.yaml
adc:
  type: list
  meta:
    label: GPIO ADC section
  schema:
    type: dict
    schema:
      id:
        type: string
        required: False
        meta:
          label: Id to use in HA if needed. Default to pin number.
      pin:
        type: string
        required: True
        allowed: ['P9_33', 'P9_35', 'P9_36', 'P9_37', 'P9_38', 'P9_39', 'P9_40']
        meta:
          label: PIN to use.
      update_interval: !include update_interval.yaml
      show_in_ha:
        type: boolean
        required: True
        default: True
        meta:
          label: If you want you can disable discovering this input in HA.
      filters: !include filters_adc.yaml
cover:
  type: list
  required: False
  meta:
    label: Cover section
  schema:
    type: dict
    schema:
      id:
        type: string
        required: True
        meta:
          label: Id to use in HA if needed.
      restore_state:
        type: boolean
        required: True
        default: False
        meta:
          label: Restore saved state of boneio.
      open_relay:
        type: string
        required: True
        meta:
          label: ID of open relay of output.
      close_relay:
        type: string
        required: True
        meta:
          label: ID of close relay of output.
      open_time:
        type:
          - string
          - timeperiod
        coerce:
          - str
          - positive_time_period
        required: True
        meta:
          label: Time to open cover. Example 30s. Minimum is 1s.
      close_time:
        type:
          - string
          - timeperiod
        coerce:
          - str
          - positive_time_period
        required: True
        meta:
          label: Time to close cover. Example 30s. Minimum is 1s.
      device_class:
        type: string
        required: False
        allowed:
          [
            'awning',
            'blind',
            'curtain',
            'damper',
            'door',
            'garage',
            'gate',
            'shade',
            'shutter',
            'window',
          ]
        meta:
          label: Device class to use in HA
      show_in_ha:
        type: boolean
        required: True
        default: True
        meta:
          label: If you want you can disable discovering this input in HA.

ds2482:
  type: list
  required: False
  meta:
    label: DS2482 list
  schema:
    type: dict
    required: False
    schema:
      id: !include id.yaml
      address:
        type: string
        required: True
        default: 0x18
        meta:
          label: GPIO of I2C SDA

dallas:
  type: dict
  required: False
  schema:
    id:
      type: string
      required: True
      meta:
        label: Id of bus to use in sensor config.

sensor:
  type: list
  required: False
  meta:
    label: Sensor list. Currently only Dallas DS18B20 support.
  schema:
    type: dict
    schema:
      id:
        type: string
        required: False
        meta:
          label: Id to use in HA if needed. Default to address.
      platform:
        type: string
        required: True
        default: dallas
        allowed: ['dallas']
        meta:
          label: Platform of sensor to use. Currently only Dallas platform is supported.
      address:
        type: integer
        required: True
        meta:
          label: Address of Dallas device
      bus_id:
        type: string
        required: False
        meta:
          label: Put bus_id (either dallas or ds2482) defined id if you want to add DS18B20 connected via DS2482. Defaults to Dallas bus id.
      show_in_ha:
        type: boolean
        required: True
        default: True
        meta:
          label: If you want you can disable discovering this input in HA.
      filters: !include filters.yaml
      update_interval: !include update_interval.yaml
      unit_of_measurement: !include temp_unit.yaml
